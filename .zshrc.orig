# Created by cmdel
# My .zshrc file
#
# Written by Christos Delivorias.
# With a lot of input and nit-picking from www.dotfiles.org
#
# Latest version available from http://github.com/cmdel/rc-configs
#
# Some functions taken from various web sites/mailing lists, others written
# myself.
#
# Last updated 2010-15-03
#
# Released into the public domain.
#
# TODOtxt settings{{{
source /Users/cmd/bin/todo.txt-cli/todo_completion
#}}}
# Set less options# {{{
if [[ -x $(which less) ]]
then
    export PAGER="less"
    export LESS="--ignore-case --LONG-PROMPT --QUIET --chop-long-lines -Sm --RAW-CONTROL-CHARS --quit-if-one-screen --no-init"
    if [[ -x $(which lesspipe.sh) ]]
    then
	LESSOPEN="| lesspipe.sh %s"
	export LESSOPEN
    fi
fi
 # }}}
# Set default editor{{{
if [[ -x $(which emacs) ]]
then
    export EDITOR="vim"
    export USE_EDITOR=$EDITOR
    export VISUAL=$EDITOR
fi
#}}}
# Zsh settings for history {{{
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
export HISTSIZE=25000
export HISTFILE=~/.zsh_history
export SAVEHIST=25000
export CLOJURE_EXT=~/.clojure
export GPGKEY=74978A19
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
#}}}
# Zsh spelling correction options
#setopt CORRECT
#setopt DVORAK

# Prompts for confirmation after 'rm *' etc# {{{
# Helps avoid mistakes like 'rm * o' when 'rm *.o' was intended
setopt RM_STAR_WAIT
# }}}
# Background processes aren't killed on exit of shell# {{{
setopt AUTO_CONTINUE
# }}}

# Don’t write over existing files with >, use >! instead# {{{
setopt NOCLOBBER
# }}}

# Don’t nice background processes# {{{
setopt NO_BG_NICE
# }}}

# Watch other user login/out# {{{
watch=notme
export LOGCHECK=60
# }}}
# Enable color support of ls# {{{
if [[ "$TERM" != "dumb" ]]; then
    if [[ -x `which dircolors` ]]; then
	eval `dircolors -b`
	alias 'ls=ls --color=auto'
    fi
fi
# }}}
# Short command aliases# {{{
alias 'l=ls'
alias 'la=ls -A'
alias 'll=ls -l'
alias 'lq=ls -Q'
alias 'lr=ls -R'
alias 'lrs=ls -lrS'
alias 'lt=ls -lrt'
alias 'lrta=ls -lrtA'
alias 'j=jobs -l'
alias 'kw=kwrite'
alias 'tf=tail -f'
alias 'grep=grep --colour'
alias 'e=emacs -nw --quick'
alias 'vnice=nice -n 20 ionice -c 3'
alias 'get_iplayer=get_iplayer --nopurge'
alias 'vi=vim'
alias 'df=df -h'
alias octave="export GNUTERM=x11; /Applications/Octave.app/Contents/Resources/bin/octave -q"
alias gnuplot="/Applications/GnuPlot.app/Contents/Resources/bin/gnuplot"
alias 't=todo.sh'
alias 'tall=clear;t ls;t birdseye' 
alias lately='t lately'
alias mirror="wget --wait=2 --convert-links --limit-rate=50K --no-parent --mirror -p -U Mozilla $1"
alias debug="sudo fs_usage -w -f filesys > ./fs_usage.log; egrep -e read fs_usage.log | less ; egrep -e write fs_usage.log |less; rm -rf fs_usage.log"
alias python=/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7
#}}}


# Server Aliases {{{
alias server="ssh cmd@10.211.55.8"
alias hserver='ssh cloudera@192.168.0.17'
 # }}}


# Brew specific package management# {{{
alias 'install=brew install'
# }}}

# Play safe!# {{{
alias 'rm=rm -i'
alias 'mv=mv -i'
alias 'cp=cp -i'
alias shred='shred -vu' #securely delete a file
# }}}
# For convenience# {{{
alias 'mkdir=mkdir -p'
alias 'dus=du -mhs * | sort -n'
alias 'q=clear; exit'
# }}}
# Typing errors...{{{
alias 'c=clear;fortune'
alias 'ks=ls'
alias 'cd..=cd ..'
# }}}


# Global aliases (expand whatever their position)# {{{
#  e.g. find . E L
alias -g L='| less'
alias -g H='| head'
alias -g S='| sort'
alias -g T='| tail'
alias -g N='> /dev/null'
alias -g E='2> /dev/null'
# }}}
# SSH aliases# {{{
alias 'sshme=ssh me@myserver.com'
# }}}

# Quick find
f() {
    echo "find . -iname \"*$1*\""
    find . -iname "*$1*"
}


# When directory is changed set xterm title to host:dir# {{{
chpwd() {
    [[ -t 1 ]] || return
    case $TERM in
	sun-cmd) print -Pn "\e]l%~\e\\";;
        *xterm*|rxvt|(dt|k|E)term) print -Pn "\e]2;%m:%~\a";;
    esac
}
# }}}

# For quickly plotting data with gnuplot.  Arguments are files for 'plot "<file>" with lines'.# {{{
plot () {
    echo -n '(echo set term png; '
    echo -n 'echo -n plot \"'$1'\" with lines; '
    for i in $*[2,$#@]; echo -n 'echo -n , \"'$i'\" with lines; '
    echo 'echo ) | gnuplot | display png:-'

    (
	echo "set term png"
	echo -n plot \"$1\" with lines
	for i in $*[2,$#@]; echo -n "," \"$i\" "with lines"
	) | gnuplot | display png:-
}
# }}}
# Persistant gnuplot (can be resized etc)# {{{
plotp () {
    echo -n '(echo -n plot \"'$1'\" with lines; '
    for i in $*[2,$#@]; echo -n 'echo -n , \"'$i'\" with lines; '
    echo 'echo ) | gnuplot -persist'

    (
	echo -n plot \"$1\" with lines
	for i in $*[2,$#@]; echo -n "," \"$i\" "with lines"
	echo
	) | gnuplot -persist
}
# }}}
# Rotate a jpeg, losslessly# {{{
jrotate-r () {
    for i in $*; do
	exiftran -9 -b -i $i
    done
}
# }}}
# Print some stuff before the shell starts {{{
date
if [[ -x `which fortune` ]]; then
    echo
    fortune -a 2> /dev/null
fi
#}}}
# The following lines were added by compinstall{{{
zstyle ':completion:*' completer _expand _complete _match
zstyle ':completion:*' completions 0
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' glob 0
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list '+m:{a-z}={A-Z} r:|[._-]=** r:|=**' '' '' '+m:{a-z}={A-Z} r:|[._-]=** r:|=**'
zstyle ':completion:*' max-errors 1 numeric
zstyle ':completion:*' substitute 0
zstyle :compinstall filename "$HOME/.zshrc"

autoload -Uz compinit
compinit
# End of lines added by compinstall              

zstyle -d users
#zstyle ':completion:*' users mrb04 matt
zstyle ':completion:*:*:*:users' ignored-patterns \
    adm apache bin daemon games gdm halt ident junkbust lp mail mailnull \
    named news nfsnobody nobody nscd ntp operator pcap postgres radvd \
    rpc rpcuser rpm shutdown squid sshd sync uucp vcsa xfs backup  bind  \
    dictd  gnats  identd  irc  man  messagebus  postfix  proxy  sys  www-data \
    avahi Debian-exim hplip list cupsys haldaemon ntpd proftpd statd

zstyle ':completion:*' hosts $( cat $HOME/.hosts* )

zstyle ':completion:*:cd:*' ignored-patterns '(*/)#lost+found' '(*/)#CVS'
zstyle ':completion:*:(all-|)files' ignored-patterns '(|*/)CVS'

zstyle ':completion:*:(rm|kill|diff):*' ignore-line yes
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'

# Filename suffixes to ignore during completion (except after rm command)
# This doesn't seem to work
#zstyle ':completion:*:*:(^rm):*:*files' ignored-patterns '*?.o' '*?.c~' '*?.old' '*?.pro' '*~'
#zstyle ':completion:*:(all-|)files' file-patterns '(*~|\\#*\\#):backup-files' 'core(|.*):core\ files' '*:all-files'

zstyle ':completion:*:*:rmdir:*' file-sort time

zstyle ':completion:*' local matt.blissett.me.uk /web/matt.blissett.me.uk

# CD to never select parent directory
zstyle ':completion:*:cd:*' ignore-parents parent pwd
#}}}

# Quick ../../.. {{{
rationalise-dot() {
    if [[ $LBUFFER = *.. ]]; then
	LBUFFER+=/..
    else
	LBUFFER+=.
    fi
}
zle -N rationalise-dot
bindkey . rationalise-dot
#}}}
#
autoload zsh/sched

# Copies word from earlier in the current command line
# or previous line if it was chosen with ^[. etc
autoload copy-earlier-word
zle -N copy-earlier-word
bindkey '^[,' copy-earlier-word

# Cycle between positions for ambigous completions
autoload cycle-completion-positions
zle -N cycle-completion-positions
bindkey '^[z' cycle-completion-positions

# Increment integer argument
autoload incarg
zle -N incarg
bindkey '^X+' incarg

# Write globbed files into command line
autoload insert-files
zle -N insert-files
bindkey '^Xf' insert-files

# xargs but zargs
autoload -U zargs

# Calculator
autoload zcalc

# Line editor
autoload zed

# Renaming with globbing
autoload zmv


# Add host/domain specific zshrc {{{
if [ -f $HOME/.zshrc-$HOST ]
then
    . $HOME/.zshrc-$HOST
fi

if [ -f $HOME/.zshrc-$(hostname -s) ]
then
    . $HOME/.zshrc-$(hostname -s)
fi
#}}}

# Clojure paths# {{{
PATH=$PATH:~/bin
# }}}

#CouchDB vars# {{{
export C="http://127.0.0.1:5984"
alias curlp='curl -X PUT'
alias curld='curl -X DELETE'
alias curldbg='curl -v'
# }}}

# Extract archives {{{
extract () {
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xjf $1        ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1       ;;
             *.rar)       rar x $1     ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1        ;;
             *.tbz2)      tar xjf $1      ;;
             *.tgz)       tar xzf $1       ;;
             *.zip)       unzip $1     ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
             *)           echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}
#}}}

# Create a directory and move into it# {{{
mdc() { mkdir -p "$1" && cd "$1" }
# }}}


# Include your custom scripts in the PATH {{{
export PATH=$PATH:~/scripts
export PATH=$PATH:~/bin/todo.txt-cli/
export CLASSPATH=~/Library/clojure/clojure-1.2.0/:~/Library/jline:/
#}}}
## less manpage colors {{{

export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'                           
export LESS_TERMCAP_so=$'\E[01;44;33m'                                 
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
#}}}


# Aliases for git {{{

# Aliases
alias g='git'
compdef g=git
alias gst='git status'
compdef _git gst=git-status
alias gl='git pull'
compdef _git gl=git-pull
alias gup='git fetch && git rebase'
compdef _git gup=git-fetch
alias gp='git push'
compdef _git gp=git-push
gdv() { git-diff -w "$@" | view - }
compdef _git gdv=git-diff
alias gc='git commit -v'
compdef _git gc=git-commit
alias gca='git commit -v -a'
compdef _git gca=git-commit
alias gco='git checkout'
compdef _git gco=git-checkout
alias gcm='git checkout master'
alias gb='git branch'
compdef _git gb=git-branch
alias gba='git branch -a'
compdef _git gba=git-branch
alias gcount='git shortlog -sn'
compdef gcount=git
alias gcp='git cherry-pick'
compdef _git gcp=git-cherry-pick
alias glg='git log --stat --max-count=5'
compdef _git glg=git-log
alias glgg='git log --graph --max-count=5'
compdef _git glgg=git-log
alias gss='git status -s'
compdef _git gss=git-status
alias ga='git add'
compdef _git ga=git-add
alias gm='git merge'
compdef _git gm=git-merge
# }}}
#
#
# Aliases for sparks# {{{
alias spark_gitlog='git shortlog -s | cut -f1 | spark' # }}}
